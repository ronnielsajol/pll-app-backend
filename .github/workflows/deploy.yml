name: Deploy to GoDaddy

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual deployment

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Application

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, mysql

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    name: Deploy to GoDaddy
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to GoDaddy Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GODADDY_HOST }}
          username: ${{ secrets.GODADDY_USERNAME }}
          password: ${{ secrets.GODADDY_PASSWORD }}
          port: ${{ secrets.GODADDY_PORT }}
          timeout: 300s
          script: |
            set -e

            echo "üöÄ Starting deployment to GoDaddy..."

            # Navigate to project directory
            cd ${{ secrets.GODADDY_PROJECT_PATH }}

            # Put application in maintenance mode
            echo "üì± Putting application in maintenance mode..."
            php artisan down || echo "App already down or first deployment"

            # Create backup
            echo "üíæ Creating backup..."
            BACKUP_DIR="/home/${{ secrets.GODADDY_USERNAME }}/backups"
            mkdir -p $BACKUP_DIR
            BACKUP_NAME="backup_$(date +%Y%m%d_%H%M%S)"
            cp -r . $BACKUP_DIR/$BACKUP_NAME || echo "Backup creation failed, continuing..."

            # Pull latest changes
            echo "üì• Pulling latest changes from GitHub..."
            git fetch origin
            git reset --hard origin/main

            # Install/update dependencies
            echo "üì¶ Installing/updating composer dependencies..."
            composer install --no-dev --optimize-autoloader --no-interaction

            # Clear all caches
            echo "üßπ Clearing caches..."
            php artisan config:clear
            php artisan cache:clear
            php artisan route:clear
            php artisan view:clear

            # Run database migrations
            echo "üóÑÔ∏è Running database migrations..."
            php artisan migrate --force

            # Cache for performance
            echo "‚ö° Caching for performance..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # Create storage symlink if needed
            echo "üîó Creating storage symlink..."
            php artisan storage:link || echo "Symlink already exists"

            # Set proper permissions
            echo "üîê Setting proper permissions..."
            find . -type f -exec chmod 644 {} \;
            find . -type d -exec chmod 755 {} \;
            chmod -R 775 storage
            chmod -R 775 bootstrap/cache

            # Bring application back up
            echo "üü¢ Bringing application back online..."
            php artisan up

            echo "‚úÖ Deployment completed successfully!"
            echo "üìä Backup created at: $BACKUP_DIR/$BACKUP_NAME"

      - name: Deployment Status
        if: failure()
        run: |
          echo "‚ùå Deployment failed!"
          exit 1
